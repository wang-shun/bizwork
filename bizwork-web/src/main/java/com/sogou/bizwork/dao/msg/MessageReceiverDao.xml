<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sogou.bizwork.dao.msg.MessageReceiverDao">

  <select id="setStatusToRead" parameterType="map" >
     UPDATE message_receiver mr1 SET `status`=0
        WHERE mr1.mes_id in (
            SELECT m.mes_id from message_mes m
                JOIN (SELECT * from message_receiver) mr ON mr.mes_id=m.mes_id
            WHERE m.mes_type_id=#{mesTypeId} AND mr.`status`=1 
        ) and mr1.employee_id=#{employeeId};
  </select>
  
  <insert id="insertReceivers" parameterType="com.sogou.bizwork.bo.msg.MsgReceiver">
    INSERT INTO message_receiver (mes_id, employee_id)
        VALUES 
     <foreach collection="list" item="receiver" separator=",">
        (#{receiver.mesId},#{receiver.employeeId})
     </foreach>
  </insert>
  
  <resultMap id="BaseResultMap" type="com.sogou.bizwork.bo.msg.MessageReceiver">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="mes_id" jdbcType="BIGINT" property="mesId" />
    <result column="employee_id" jdbcType="BIGINT" property="employeeId" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mes_id, employee_id, status
  </sql>
  <select id="selectByExample" parameterType="com.sogou.bizwork.bo.msg.MessageReceiverExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message_receiver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message_receiver
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from message_receiver
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sogou.bizwork.bo.msg.MessageReceiverExample">
    delete from message_receiver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sogou.bizwork.bo.msg.MessageReceiver">
    insert into message_receiver (id, mes_id, employee_id, 
      status)
    values (#{id,jdbcType=BIGINT}, #{mesId,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.sogou.bizwork.bo.msg.MessageReceiver">
    insert into message_receiver
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mesId != null">
        mes_id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mesId != null">
        #{mesId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sogou.bizwork.bo.msg.MessageReceiverExample" resultType="java.lang.Long">
    select count(*) from message_receiver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message_receiver
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.mesId != null">
        mes_id = #{record.mesId,jdbcType=BIGINT},
      </if>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message_receiver
    set id = #{record.id,jdbcType=BIGINT},
      mes_id = #{record.mesId,jdbcType=BIGINT},
      employee_id = #{record.employeeId,jdbcType=BIGINT},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sogou.bizwork.bo.msg.MessageReceiver">
    update message_receiver
    <set>
      <if test="mesId != null">
        mes_id = #{mesId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sogou.bizwork.bo.msg.MessageReceiver">
    update message_receiver
    set mes_id = #{mesId,jdbcType=BIGINT},
      employee_id = #{employeeId,jdbcType=BIGINT},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>