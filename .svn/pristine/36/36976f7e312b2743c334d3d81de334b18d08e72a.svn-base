<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sogou.bizwork.dao.msg.MessageTypeSubscribeDao">
    <delete id="deleteSubscribes" parameterType="java.util.List">
       delete from message_type_subscribe where 
          <foreach collection="list" item="item" separator="or">
              mes_type_id=#{item.mesTypeId}
              AND employee_id=#{item.employeeId} 
          </foreach>
    </delete>

    <insert id="insertSubscribes" parameterType="java.util.List">
        insert into message_type_subscribe (mes_type_id, employee_id, if_subscribe) values
            <foreach collection="list" item="item" index="index" separator=",">
                ( #{item.mesTypeId}, #{item.employeeId}, #{item.ifSubscribe})
            </foreach>
        ;
    </insert>
  
  <resultMap id="BaseResultMap" type="com.sogou.bizwork.bo.msg.MessageTypeSubscribe">
    <id column="employee_id" jdbcType="BIGINT" property="employeeId" />
    <id column="mes_type_id" jdbcType="BIGINT" property="mesTypeId" />
    <result column="if_subscribe" jdbcType="TINYINT" property="ifSubscribe" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    employee_id, mes_type_id, if_subscribe
  </sql>
  <select id="selectByExample" parameterType="com.sogou.bizwork.bo.msg.MessageTypeSubscribeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message_type_subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.sogou.bizwork.bo.msg.MessageTypeSubscribeKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message_type_subscribe
    where employee_id = #{employeeId,jdbcType=BIGINT}
      and mes_type_id = #{mesTypeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.sogou.bizwork.bo.msg.MessageTypeSubscribeKey">
    delete from message_type_subscribe
    where employee_id = #{employeeId,jdbcType=BIGINT}
      and mes_type_id = #{mesTypeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sogou.bizwork.bo.msg.MessageTypeSubscribeExample">
    delete from message_type_subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sogou.bizwork.bo.msg.MessageTypeSubscribe">
    insert into message_type_subscribe (employee_id, mes_type_id, if_subscribe
      )
    values (#{employeeId,jdbcType=BIGINT}, #{mesTypeId,jdbcType=BIGINT}, #{ifSubscribe,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sogou.bizwork.bo.msg.MessageTypeSubscribe">
    insert into message_type_subscribe
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="mesTypeId != null">
        mes_type_id,
      </if>
      <if test="ifSubscribe != null">
        if_subscribe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="mesTypeId != null">
        #{mesTypeId,jdbcType=BIGINT},
      </if>
      <if test="ifSubscribe != null">
        #{ifSubscribe,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sogou.bizwork.bo.msg.MessageTypeSubscribeExample" resultType="java.lang.Long">
    select count(*) from message_type_subscribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message_type_subscribe
    <set>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=BIGINT},
      </if>
      <if test="record.mesTypeId != null">
        mes_type_id = #{record.mesTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.ifSubscribe != null">
        if_subscribe = #{record.ifSubscribe,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message_type_subscribe
    set employee_id = #{record.employeeId,jdbcType=BIGINT},
      mes_type_id = #{record.mesTypeId,jdbcType=BIGINT},
      if_subscribe = #{record.ifSubscribe,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sogou.bizwork.bo.msg.MessageTypeSubscribe">
    update message_type_subscribe
    <set>
      <if test="ifSubscribe != null">
        if_subscribe = #{ifSubscribe,jdbcType=TINYINT},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=BIGINT}
      and mes_type_id = #{mesTypeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sogou.bizwork.bo.msg.MessageTypeSubscribe">
    update message_type_subscribe
    set if_subscribe = #{ifSubscribe,jdbcType=TINYINT}
    where employee_id = #{employeeId,jdbcType=BIGINT}
      and mes_type_id = #{mesTypeId,jdbcType=BIGINT}
  </update>
</mapper>