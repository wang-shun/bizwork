<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sogou.bizwork.cas.user.dao.UserMapper">
	<select id="getNameByEmployeeId" parameterType="java.lang.Integer"
		resultType="java.lang.String">
		SELECT chinesename FROM `user` WHERE
		employee_id=#{employeeId};
	</select>
	<select id="getUserByUsername" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select * from user where username=#{username}
	</select>

	<select id="getNameByEmployeeIds" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT username FROM `user` WHERE employee_id in
		<foreach item="item" index="index" collection="employeeIds"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<resultMap id="BaseResultMap" type="com.sogou.bizwork.cas.user.model.User">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="employee_id" jdbcType="INTEGER" property="employeeId" />
		<result column="username" jdbcType="VARCHAR" property="userName" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="chinesename" jdbcType="VARCHAR" property="chineseName" />
		<result column="groupname" jdbcType="VARCHAR" property="groupName" />
		<result column="birthday" jdbcType="VARCHAR" property="birthday" />
		<result column="telephone" jdbcType="VARCHAR" property="telephone" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="role" jdbcType="BIT" property="role" />
		<result column="state" jdbcType="BIT" property="state" />
		<result column="level" jdbcType="VARCHAR" property="level" />
		<result column="job" jdbcType="VARCHAR" property="job" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.sogou.bizwork.cas.user.model.User">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<result column="photo" jdbcType="LONGVARBINARY" property="photo" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, employee_id,username, email, chinesename, groupname, birthday,
		telephone, mobile, role, state,
		level, job
	</sql>
	<sql id="Blob_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		photo
	</sql>
	<select id="selectByExampleWithBLOBs" parameterType="com.sogou.bizwork.cas.user.model.UserExample"
		resultMap="ResultMapWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="com.sogou.bizwork.cas.user.model.UserExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.sogou.bizwork.cas.user.model.UserExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>

	<insert id="insert" parameterType="com.sogou.bizwork.cas.user.model.User">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into user (id, employee_id, username, email,
		chinesename,
		groupid, groupname, birthday,
		telephone, mobile, role,
		state, level,
		job, photo
		)
		values (#{id,jdbcType=INTEGER},#{employeeId},
		#{userName,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{chineseName,jdbcType=VARCHAR},(SELECT Id FROM grouptable g WHERE
		g.groupname=#{groupName}),
		#{groupName,jdbcType=VARCHAR},
		#{birthday,jdbcType=VARCHAR},
		#{telephone,jdbcType=VARCHAR},
		#{mobile,jdbcType=VARCHAR},
		#{role,jdbcType=BIT},
		#{state,jdbcType=BIT}, #{level,jdbcType=VARCHAR},
		#{job,jdbcType=VARCHAR},
		#{photo,jdbcType=LONGVARBINARY}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.sogou.bizwork.cas.user.model.User">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				username,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="chineseName != null">
				chinesename,
			</if>
			<if test="groupName != null">
				groupname,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="telephone != null">
				telephone,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="role != null">
				role,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="level != null">
				level,
			</if>
			<if test="job != null">
				job,
			</if>
			<if test="photo != null">
				photo,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="chineseName != null">
				#{chineseName,jdbcType=VARCHAR},
			</if>
			<if test="groupName != null">
				#{groupName,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=VARCHAR},
			</if>
			<if test="telephone != null">
				#{telephone,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				#{role,jdbcType=BIT},
			</if>
			<if test="state != null">
				#{state,jdbcType=BIT},
			</if>
			<if test="level != null">
				#{level,jdbcType=VARCHAR},
			</if>
			<if test="job != null">
				#{job,jdbcType=VARCHAR},
			</if>
			<if test="photo != null">
				#{photo,jdbcType=LONGVARBINARY},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.sogou.bizwork.cas.user.model.UserExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>

	<update id="updateUserInfo" parameterType="map">
		update user
		<set>
			<if test="userInfo.birthday != null">
				birthday = #{userInfo.birthday,jdbcType=VARCHAR},
			</if>
			<if test="userInfo.telephone != null">
				telephone = #{userInfo.telephone,jdbcType=VARCHAR},
			</if>
			<if test="userInfo.mobile != null">
				mobile = #{userInfo.mobile,jdbcType=VARCHAR},
			</if>
			<if test="userInfo.level != null">
				level = #{userInfo.level,jdbcType=VARCHAR},
			</if>
			<if test="userInfo.ipAddress != null">
				ip_address = #{ipAddress}
			</if>
		</set>
		where employee_id=#{employeeId}
	</update>

	<resultMap type="com.sogou.bizwork.cas.user.model.UserInfo"
		id="UserInfo">
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="groupname" jdbcType="VARCHAR" property="group" />
		<result column="level" jdbcType="VARCHAR" property="level" />
		<result column="telephone" jdbcType="VARCHAR" property="telephone" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="birthday" jdbcType="VARCHAR" property="birthday" />
		<result column="job" jdbcType="VARCHAR" property="title" />
		<result column="chinesename" jdbcType="VARCHAR" property="userName" />
	</resultMap>
	<select id="getUserInfo" parameterType="java.lang.Integer"
		resultMap="UserInfo">
		select u.email, g.groupname, u.level, u.telephone, u.mobile,
		u.birthday, u.job, u.chinesename
		from user u
		left join grouptable g on
		u.groupid=g.id
		where employee_id=#{employeeId}
	</select>

	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userName != null">
				username = #{record.userName,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.chineseName != null">
				chinesename = #{record.chineseName,jdbcType=VARCHAR},
			</if>
			<if test="record.groupName != null">
				groupname = #{record.groupName,jdbcType=VARCHAR},
			</if>
			<if test="record.birthday != null">
				birthday = #{record.birthday,jdbcType=VARCHAR},
			</if>
			<if test="record.telephone != null">
				telephone = #{record.telephone,jdbcType=VARCHAR},
			</if>
			<if test="record.mobile != null">
				mobile = #{record.mobile,jdbcType=VARCHAR},
			</if>
			<if test="record.role != null">
				role = #{record.role,jdbcType=BIT},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=BIT},
			</if>
			<if test="record.level != null">
				level = #{record.level,jdbcType=VARCHAR},
			</if>
			<if test="record.job != null">
				job = #{record.job,jdbcType=VARCHAR},
			</if>
			<if test="record.photo != null">
				photo = #{record.photo,jdbcType=LONGVARBINARY},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user
		set id = #{record.id,jdbcType=INTEGER},
		username =
		#{record.userName,jdbcType=VARCHAR},
		email =
		#{record.email,jdbcType=VARCHAR},
		chinesename =
		#{record.chineseName,jdbcType=VARCHAR},
		groupname =
		#{record.groupName,jdbcType=VARCHAR},
		birthday =
		#{record.birthday,jdbcType=VARCHAR},
		telephone =
		#{record.telephone,jdbcType=VARCHAR},
		mobile =
		#{record.mobile,jdbcType=VARCHAR},
		role = #{record.role,jdbcType=BIT},
		state = #{record.state,jdbcType=BIT},
		level =
		#{record.level,jdbcType=VARCHAR},
		job = #{record.job,jdbcType=VARCHAR},
		photo = #{record.photo,jdbcType=LONGVARBINARY}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user
		set id = #{record.id,jdbcType=INTEGER},
		username =
		#{record.userName,jdbcType=VARCHAR},
		email =
		#{record.email,jdbcType=VARCHAR},
		chinesename =
		#{record.chineseName,jdbcType=VARCHAR},
		groupname =
		#{record.groupName,jdbcType=VARCHAR},
		birthday =
		#{record.birthday,jdbcType=VARCHAR},
		telephone =
		#{record.telephone,jdbcType=VARCHAR},
		mobile =
		#{record.mobile,jdbcType=VARCHAR},
		role = #{record.role,jdbcType=BIT},
		state = #{record.state,jdbcType=BIT},
		level =
		#{record.level,jdbcType=VARCHAR},
		job = #{record.job,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sogou.bizwork.cas.user.model.User">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user
		<set>
			<if test="userName != null">
				username = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="chineseName != null">
				chinesename = #{chineseName,jdbcType=VARCHAR},
			</if>
			<if test="groupName != null">
				groupname = #{groupName,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=VARCHAR},
			</if>
			<if test="telephone != null">
				telephone = #{telephone,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				role = #{role,jdbcType=BIT},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=BIT},
			</if>
			<if test="level != null">
				level = #{level,jdbcType=VARCHAR},
			</if>
			<if test="job != null">
				job = #{job,jdbcType=VARCHAR},
			</if>
			<if test="photo != null">
				photo = #{photo,jdbcType=LONGVARBINARY},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sogou.bizwork.cas.user.model.User">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user
		set username = #{userName,jdbcType=VARCHAR},
		email =
		#{email,jdbcType=VARCHAR},
		chinesename =
		#{chineseName,jdbcType=VARCHAR},
		groupname =
		#{groupName,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=VARCHAR},
		telephone = #{telephone,jdbcType=VARCHAR},
		mobile =
		#{mobile,jdbcType=VARCHAR},
		role = #{role,jdbcType=BIT},
		state =
		#{state,jdbcType=BIT},
		level = #{level,jdbcType=VARCHAR},
		job =
		#{job,jdbcType=VARCHAR},
		photo = #{photo,jdbcType=LONGVARBINARY}
		where
		id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sogou.bizwork.cas.user.model.User">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update user
		set username = #{userName,jdbcType=VARCHAR},
		email =
		#{email,jdbcType=VARCHAR},
		chinesename =
		#{chineseName,jdbcType=VARCHAR},
		groupname =
		#{groupName,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=VARCHAR},
		telephone = #{telephone,jdbcType=VARCHAR},
		mobile =
		#{mobile,jdbcType=VARCHAR},
		role = #{role,jdbcType=BIT},
		state =
		#{state,jdbcType=BIT},
		level = #{level,jdbcType=VARCHAR},
		job =
		#{job,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectUsers" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from user
		where state!=2
	</select>


	<insert id="addUser" parameterType="com.sogou.bizwork.cas.user.model.User">
		INSERT INTO USER( USERNAME,
		EMAIL, CHINESENAME, GROUPNAME,
		BIRTHDAY, TELEPHONE, MOBILE, ROLE, STATE
		,
		level, job ,photo )
		VALUES ( #{userName}, #{email}, #{userName},
		#{groupName},
		#{birthday}, #{telephone}, #{mobile}, #{role}, #{state}
		,
		#{level}, #{job}, #{photo} )
	</insert>

	<select id="getPersonalInfoByEmployeeId" parameterType="java.lang.Integer"
		resultType="com.sogou.bizwork.cas.user.model.PersonalInfo">
		select
		u.`level`, u.groupid groupId, u.telephone,
		u.birthday, u.mobile, u.ip_address ipAddress, u.user_type userType,
		u1.chinesename leader
		FROM `user` u
		LEFT JOIN `user` u1 ON
		u1.employee_id=u.leader_id
		WHERE u.employee_id=#{employeeid}
	</select>

	<update id="updatePersonalInfoByEmployeeId" parameterType="com.sogou.bizwork.cas.user.model.PersonalInfo">
		UPDATE `user` SET `level`=#{level}, groupid=#{groupId},
		telephone=#{telephone}, birthday=#{birthday},mobile=#{mobile},
		ip_address=#{ipAddress} where employee_id=#{employeeid}
	</update>
</mapper>